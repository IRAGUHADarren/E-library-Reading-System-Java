/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Image;
import java.io.FileOutputStream;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import model.Book;
import service.BookInterface;
import java.util.Base64;
import javax.swing.ImageIcon;

/**
 *
 * @author ZIPTECH LTD
 */
public class Literatures extends javax.swing.JInternalFrame {
private DefaultTableModel tableModel = new DefaultTableModel();
    /**
     * Creates new form Literatures
     */
    public Literatures() {
        initComponents();
        AddBookColumnTable();
        addBookDataToTable();
    }
    
    
private void AddBookColumnTable(){
    tableModel.addColumn("Bookid");
    tableModel.addColumn("BookName");
    tableModel.addColumn("Author");
    tableModel.addColumn("Category");
    tableModel.addColumn("BookPdf");
    tableModel.addColumn("BookImage");
    tableModel.addColumn("Date");
    
    //TableBook.setModel(tableModel);
    
    }
    
   
    private void addBookDataToTable(){
       try {
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
        BookInterface intrf = (BookInterface) registry.lookup("Book");
        List<Book> bookList = intrf.getAllBook();

        StringBuilder sb = new StringBuilder();
        sb.append("<html>");
        sb.append("<table>");

        for (Book book : bookList) {
            
            sb.append("<tr>");

            sb.append("<td>");
            sb.append("<b>Book ID:</b> ").append(book.getBookID()).append("<br>");
            sb.append("<b>Book Name:</b> ").append(book.getBookName()).append("<br>");
            sb.append("<b>Author:</b> ").append(book.getAuthor()).append("<br>");
            sb.append("<b>Category:</b> ").append(book.getDateCategory()).append("<br>");
            sb.append("<b>Date Released:</b> ").append(book.getDateReleased()).append("<br>");

            sb.append("</td>");

            sb.append("</tr>");
            sb.append("<tr><td colspan='2'><hr></td></tr>");
        }

        sb.append("</table>");
        sb.append("</html>");

        Literaturelabel.setText(sb.toString());
    } catch (Exception ex) {
        ex.printStackTrace();
    }
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Download = new javax.swing.JButton();
        downloadtxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Literaturelabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        Download.setText("Download");
        Download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownloadActionPerformed(evt);
            }
        });

        Literaturelabel.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(Literaturelabel);

        jPanel1.setBackground(new java.awt.Color(142, 166, 125));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("WELCOME TO THE E-LIBRARY");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(385, 385, 385)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(394, 394, 394)
                    .addComponent(downloadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(72, 72, 72)
                    .addComponent(Download)
                    .addContainerGap(488, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addGap(411, 411, 411))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(144, 144, 144)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(downloadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Download))
                    .addContainerGap(910, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownloadActionPerformed
        // TODO add your handling code here:
        String bookName = downloadtxt.getText();

        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
            BookInterface intrf = (BookInterface) registry.lookup("Book");

            String bookId = downloadtxt.getText();
            Book book = intrf.getBookById(bookId);
 
            if (book != null) {
                String authorName = book.getAuthor();
                byte[] bookPdfData = book.getBookPdf();

                String downloadsPath = System.getProperty("user.home") + "/Downloads/";

                // Write the file to disk using the entered book name and the downloads path
                FileOutputStream fileOutputStream = new FileOutputStream(downloadsPath + bookName + ".pdf");
                fileOutputStream.write(bookPdfData);
                fileOutputStream.close();

                // Print a message indicating that the file was downloaded
                System.out.println(bookName + " by " + authorName + " downloaded successfully.");
                JOptionPane.showMessageDialog(this, "Downloaded successfully");
            } else {
                // Display an error message if the entered book name is not found
                JOptionPane.showMessageDialog(this, "Book not found.");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_DownloadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Download;
    private javax.swing.JLabel Literaturelabel;
    private javax.swing.JTextField downloadtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
